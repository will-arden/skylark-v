/*
Legacy Register File
---------------------
This register file was designed to be akin to that proposed in the RISC-V Harris & Harris book.
Since the design of this processor has shifted closer to the RI5CY design, this can be considered
as a legacy file.
*/


module register_file(
        input   logic   clk, WE,                        // Clock and Write Enable
        input   logic   [4:0] A1, A2, A3,               // Addresses to the registers (1, 2 and write register address)
        input   logic   [31:0] WD,                      // Write Data
        
        output  logic   [31:0] RD1, RD2                 // Read Data
    );
    
// Create 32 32-bit registers
logic [31:0] data[31:0];
    
// Writing to the register file is sequential, and occurs on the negative clock edge
always_ff @(negedge clk)
    if(WE) data[A3] <= WD;

// Reading from the register file is combinational (and register 0x0 should always be hard-wired to zero)
assign RD1 = (A1 != 5'b00000) ? data[A1] : 32'h00000000;
assign RD2 = (A2 != 5'b00000) ? data[A2] : 32'h00000000;

endmodule
